var velocidad = 50;
var variance = 0;
var rojoR = 0;
var rojoV = 0;
var rojoA = 0;
var azulR = 0;
var azulV = 0;
var azulA = 0;
var negroR = 0;
var negroV = 0;
var blancoR = 0;
var blancoV = 0;
var blancoA = 0;
var c10 = 0;
var negroA = 0;
var velocidad_ = 0;
var giro = 0;
var c11 = 0;
var c12 = 0;
var c13 = 0;
var c20 = 0;
var sensibilidad = 0;
var angulo11 = 0;
var angulo12 = 0;
var angulo21 = 0;
var tiempo1 = 0;
var tiempo2 = 0;
var c1 = 0;
var sueloA = 0;
var sueloR = 0;
var sueloV = 0;
var grados = 0;
var color = { r: 255, g: 255, b: 255 };
var colores = 'azul';


async function startProgram() {
	c10 = 0;
	c11 = 0;
	c12 = 0;
	c13 = 0;
	c20 = 0;
	angulo11 = 0;
	angulo12 = 0;
	angulo21 = 0;
	tiempo1 = 0;
	tiempo2 = 0;
	sensibilidad = 45;
	angulo11 = 0;
	giro = 0;
	variance = 60;
	velocidad = 40;
	velocidad_ = -40;
	rojoR = 255;
	rojoV = 47;
	rojoA = 61;
	azulR = 7;
	azulV = 187;
	azulA = 255;
	negroR = 30;
	negroV = 30;
	negroA = 30;
	sueloR = 255;
	sueloV = 230;
	sueloA = 240;
	grados = 0;
	setMainLed({ r: 255, g: 48, b: 77 });
	await delay(5);
	for (var _i0 = 0; _i0 < 2; ++_i0) {
		await rollToDistance(grados, velocidad_, 15);
		c20 = c20 + 1;
		if (c20 === 2) {
			setMainLed({ r: 255, g: 151, b: 54 });
			sensibilidad = sensibilidad * -1;
			await encontrar();
			await seguidor();
			while (!(c1 === 2)) {
				await detectarcolor();
				setSpeed(velocidad_);
				await delay(0.025);
			}
		}
		if (c20 === 1) {
			setMainLed({ r: 255, g: 244, b: 15 });
			await encontrar();
			await seguidor();
			setHeading(grados);
			while (!(c1 === 4)) {
				await detectarcolor();
				setSpeed(velocidad_);
				await delay(0.025);
			}
			await rollToDistance(grados, velocidad, 30);
			angulo12 = 270;
			setHeading(angulo12);
			grados = angulo12;
			while (!(c1 === 2)) {
				await detectarcolor();
				setSpeed(velocidad_);
				await delay(0.025);
			}
			grados = 0;
			setHeading(grados);
		}
		await delay(0.025);
	}
	stopRoll();
	setMainLed({ r: 255, g: 28, b: 121 });
	await delay(3);
	await camino2();
	stopRoll();
	exitProgram();
}

async function rojo() {
	if (rojoR + variance > getColorChannel("red") && rojoR - variance < getColorChannel("red")) {
		if (rojoV + variance > getColorChannel("green") && rojoV - variance < getColorChannel("green")) {
			if (rojoA + variance > getColorChannel("blue") && rojoA - variance < getColorChannel("blue")) {
				c1 = 1;
			}
		}
	}
}

async function detectarcolor() {
	await rojo();
	await negro();
	await azul();
	await suelo();
}

async function encontrar() {
	setMainLed({ r: 91, g: 142, b: 255 });
	await detectarcolor();
	while (!(c1 === 3)) {
		setMainLed({ r: 91, g: 142, b: 255 });
		await detectarcolor();
		setSpeed(velocidad);
		if (c1 === 4) {
			setMainLed({ r: 255, g: 70, b: 83 });
			stopRoll();
			await rollToDistance(grados, velocidad_, 15);
			grados = grados - sensibilidad;
			setHeading(grados);
			stopRoll();
		}
		await delay(0.025);
	}
	setMainLed({ r: 237, g: 10, b: 255 });
	setHeading(grados);
	stopRoll();
}

async function camino2() {
	for (var _i1 = 0; _i1 < 2; ++_i1) {
		await detectarcolor();
		while (!(c1 === 1)) {
			await detectarcolor();
			setSpeed(velocidad);
			await delay(0.025);
		}
		while (!(c1 === 2)) {
			await detectarcolor();
			setSpeed(velocidad_);
			await delay(0.025);
		}
		await delay(0.025);
	}
}

async function azul() {
	if (azulR + variance > getColorChannel("red") && azulR - variance < getColorChannel("red")) {
		if (azulV + variance > getColorChannel("green") && azulV - variance < getColorChannel("green")) {
			if (azulA + variance > getColorChannel("blue") && azulA - variance < getColorChannel("blue")) {
				c1 = 2;
			}
		}
	}
}

async function negro() {
	if (negroR + variance > getColorChannel("red") && negroR - variance < getColorChannel("red")) {
		if (negroV + variance > getColorChannel("green") && negroV - variance < getColorChannel("green")) {
			if (negroA + variance > getColorChannel("blue") && negroA - variance < getColorChannel("blue")) {
				c1 = 3;
			}
		}
	}
}

async function suelo() {
	if (sueloR + variance > getColorChannel("red") && sueloR - variance < getColorChannel("red")) {
		if (sueloV + variance > getColorChannel("green") && sueloV - variance < getColorChannel("green")) {
			if (sueloA + variance > getColorChannel("blue") && sueloA - variance < getColorChannel("blue")) {
				c1 = 4;
			}
		}
	}
}

async function seguidor() {
	c10 = 0;
	c11 = 0;
	c12 = 0;
	c13 = 0;
	setMainLed({ r: 238, g: 52, b: 255 });
	await Sound.EightBit.Blip.play(true);
	await rollToDistance(grados, velocidad_, 15);
	while (!(c10 === 1)) {
		setSpeed(velocidad);
		await detectarcolor();
		if (c1 === 4) {
			while (!(c1 === 3 || c1 === 2)) {
				setMainLed({ r: 20, g: 255, b: 172 });
				await detectarcolor();
				setSpeed(velocidad_);
				await delay(0.025);
			}
			stopRoll();
			grados = grados - sensibilidad;
			setHeading(grados);
			c11 = c11 + 1;
		} else {
			if (c1 === 1) {
				c10 = 1;
			}
		}
		await delay(0.025);
	}
	stopRoll();
}
